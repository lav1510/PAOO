#include "Timer.hpp"
#include <iostream>
#include <cstring>

////////////////////////////////////////////////////////////
//Constructors
////////////////////////////////////////////////////////////
Timer::Timer (int hour, int minutes){

    std::cout<<"Constructor called!"<<std::endl;

    this->hour    = hour;
    this->minutes = minutes;
}

////////////////////////////////////////////////////////////
//Destructor
////////////////////////////////////////////////////////////
Timer::~Timer (){
    std::cout<<"Destructor called!"<<std::endl;
}

////////////////////////////////////////////////////////////
//Setters
////////////////////////////////////////////////////////////
void Timer::setHour (int hour){
    this->hour = hour;
}

void Timer::setMinutes (int minutes){
    this->minutes = minutes;
}

////////////////////////////////////////////////////////////
//Getters
////////////////////////////////////////////////////////////
int Timer::getHour (){
    return hour;
}

int Timer::getMinutes (){
    return minutes;
}
////////////////////////////////////////////////////////////
void Timer::start() {
    std::cout << "Timer started for " << hour << " hours and " << minutes << " minutes." << std::endl;
}
void Timer::stop() {
    std::cout << "Timer stopped before it reached " << hour << ":" << minutes << std::endl;
}

////////////////////////////////////////////////////////////
//interface::setTime
////////////////////////////////////////////////////////////
void Timer::setTime(int hour, int minutes) {
    this->hour    = hour;
    this->minutes = minutes;
}

////////////////////////////////////////////////////////////
//interface::ring
////////////////////////////////////////////////////////////
void Timer::ring() {
    std::cout << "Timer reached " << hour << ":" << minutes << std::endl;
}